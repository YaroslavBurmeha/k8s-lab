apiVersion: v1  # Версия API Kubernetes
kind: Namespace  # Тип ресурса - пространство имен
metadata:
  name: webapp-namespace  # Имя создаваемого пространства имен

---

apiVersion: v1  # Версия API Kubernetes
kind: Service  # Тип ресурса - сервис
metadata:
  name: database  # Имя сервиса базы данных
  namespace: webapp-namespace  # Пространство имен, в котором сервис будет создан
spec:
  selector:
    app: database  # Выбор подов с меткой "app: database"
  ports:
    - protocol: TCP  # Протокол TCP
      port: 3306  # Порт доступа к сервису
      targetPort: 3306  # Порт, на котором поды базы данных слушают

---

apiVersion: v1  # Версия API Kubernetes
kind: PersistentVolumeClaim  # Тип ресурса - запрос на постоянный том
metadata:
  name: database-pvc  # Имя запроса на постоянный том
  namespace: webapp-namespace  # Пространство имен, где запрос будет создан
spec:
  accessModes:
    - ReadWriteOnce  # Режим доступа к тому - чтение/запись одновременно
  resources:
    requests:
      storage: 1Gi  # Запрашиваемый объем хранилища - 1 гигабайт

---

apiVersion: apps/v1  # Версия API Kubernetes
kind: Deployment  # Тип ресурса - деплоймент
metadata:
  name: database  # Имя деплоймента базы данных
  namespace: webapp-namespace  # Пространство имен, где деплоймент будет создан
spec:
  replicas: 1  # Количество реплик (подов) - 1
  selector:
    matchLabels:
      app: database  # Выбор подов с меткой "app: database" для управления ими
  template:
    metadata:
      labels:
        app: database  # Метка для подов деплоймента
    spec:
      containers:
        - name: database  # Имя контейнера
          image: mysql:latest  # Образ контейнера MySQL
          env:
            - name: MYSQL_ROOT_PASSWORD  # Переменная окружения с паролем root пользователя MySQL
              value: "your_root_password"  # Значение переменной окружения - ваш пароль
          ports:
            - containerPort: 3306  # Порт контейнера, на котором MySQL слушает
          volumeMounts:
            - name: database-storage  # Имя примонтированного тома
              mountPath: /var/lib/mysql  # Путь монтирования для хранения данных MySQL
      volumes:
        - name: database-storage  # Имя тома
          persistentVolumeClaim:
            claimName: database-pvc  # Имя PersistentVolumeClaim для хранения данных

---

apiVersion: v1  # Версия API Kubernetes
kind: Service  # Тип ресурса - сервис
metadata:
  name: webapp  # Имя сервиса веб-приложения
  namespace: webapp-namespace  # Пространство имен, в котором сервис будет создан
spec:
  selector:
    app: webapp  # Выбор подов с меткой "app: webapp"
  ports:
    - protocol: TCP  # Протокол TCP
      port: 80  # Порт доступа к веб-приложению
      targetPort: 80  # Порт, на котором веб-приложение слушает
  type: ClusterIP

---

apiVersion: apps/v1  # Версия API Kubernetes
kind: Deployment  # Тип ресурса - деплоймент
metadata:
  name: webapp  # Имя деплоймента веб-приложения
  namespace: webapp-namespace  # Пространство имен, где деплоймент будет создан
spec:
  replicas: 5  # Количество реплик (подов) - 1
  selector:
    matchLabels:
      app: webapp  # Выбор подов с меткой "app: webapp" для управления ими
  template:
    metadata:
      labels:
        app: webapp  # Метка для подов деплоймента
    spec:
      containers:
        - name: webapp  # Имя контейнера
          image: zloyejikad/k8s-lab:v42  # Образ контейнера с вашим приложением
          ports:
            - containerPort: 80  # Порт контейнера, на котором приложение слушает
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /usr/src/app/. /var/www/html"]
          volumeMounts:
            - name: shared-data
              mountPath: /var/www/html
        - name: php
          image: php:8.2-fpm
          ports:
              - containerPort: 9000
          volumeMounts:
            - name: shared-data
              mountPath: /var/www/html
          env:
            - name: DB_HOST  # Переменная окружения для хоста базы данных
              value: database  # Значение переменной окружения - имя сервиса базы данных
            - name: DB_PORT  # Переменная окружения для порта базы данных
              value: "3306"  # Значение переменной окружения - порт базы данных
            - name: DB_USER  # Переменная окружения для пользователя базы данных
              value: "root"  # Значение переменной окружения - ваш пользователь
            - name: DB_PASSWORD  # Переменная окружения для пароля базы данных
              value: "123@Qwerty"  # Значение переменной окружения - ваш пароль
            - name: DB_NAME  # Переменная окружения для названия базы данных
              value: "k8sTEST"  # Значение переменной окружения - название вашей базы данных
      volumes:
        - name: shared-data # Имя тома
          emptyDir: {}


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress
  namespace: webapp-namespace
spec:
  rules:
  - host: k8snode1.navbahorholding.uz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: webapp
            port:
              number: 80
  - host: k8snode2.navbahorholding.uz
    http:
    paths:
    - path: /index.php
      pathType: Prefix
      backend:
        service:
          name: webapp
          port:
            number: 80